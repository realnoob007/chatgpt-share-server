import{_ as i,r as d,o as r,c as l,b as a,d as e,e as n,a as c}from"./app-eCh8_bYV.js";const t={},o=a("h1",{id:"安装指南",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装指南","aria-hidden":"true"},"#"),e(" 安装指南")],-1),h=a("h2",{id:"前置条件",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#前置条件","aria-hidden":"true"},"#"),e(" 前置条件")],-1),u=a("li",null,[e("1 台 2C2G 以上服务器,推荐使用 Ubuntu 20.04 LTS 以上版本,服务器不强制要求可以访问官网,但需要能够访问"),a("code",null,"demo.xyhelper.cn")],-1),p={href:"https://docs.docker.com/engine/install/ubuntu/#install-using-the-convenience-script",target:"_blank",rel:"noopener noreferrer"},v=a("li",null,[e("安装 git,推荐使用"),a("code",null,"apt install git")],-1),b=a("code",null,"caddy",-1),m=a("code",null,"nginx",-1),g=a("code",null,"caddy",-1),k={href:"https://caddyserver.com/docs/install#debian-ubuntu-raspbian",target:"_blank",rel:"noopener noreferrer"},x=a("li",null,[e("使用 root 用户安装,不建议使用非 root 用户通过"),a("code",null,"sudo"),e("安装，可能会导致权限问题。")],-1),f=c(`<h2 id="常用系统优化" tabindex="-1"><a class="header-anchor" href="#常用系统优化" aria-hidden="true">#</a> 常用系统优化</h2><h3 id="系统时间同步" tabindex="-1"><a class="header-anchor" href="#系统时间同步" aria-hidden="true">#</a> 系统时间同步</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> ntpdate <span class="token parameter variable">-y</span>
ntpdate time.windows.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="系统时区设置" tabindex="-1"><a class="header-anchor" href="#系统时区设置" aria-hidden="true">#</a> 系统时区设置</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>timedatectl set-timezone Asia/Shanghai
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置最大文件打开数" tabindex="-1"><a class="header-anchor" href="#设置最大文件打开数" aria-hidden="true">#</a> 设置最大文件打开数</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;fs.inotify.max_user_instances=5120&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;fs.inotify.max_user_watches=2621440&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;fs.file-max=65535&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf

<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="限制-docker-日志大小" tabindex="-1"><a class="header-anchor" href="#限制-docker-日志大小" aria-hidden="true">#</a> 限制 docker 日志大小</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker

<span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF
{
  &quot;log-driver&quot;: &quot;json-file&quot;,
  &quot;log-opts&quot;: {
    &quot;max-size&quot;: &quot;10m&quot;,
    &quot;max-file&quot;: &quot;3&quot;
  }
}
EOF</span>

systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置防火墙" tabindex="-1"><a class="header-anchor" href="#设置防火墙" aria-hidden="true">#</a> 设置防火墙</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ufw allow <span class="token number">80</span>/tcp
ufw allow <span class="token number">443</span>/tcp
ufw allow <span class="token number">22</span>/tcp

ufw <span class="token builtin class-name">enable</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><h3 id="安装-chatgpt-share-server" tabindex="-1"><a class="header-anchor" href="#安装-chatgpt-share-server" aria-hidden="true">#</a> 安装 ChatGPT-Share-Server</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-sSfL</span> https://raw.githubusercontent.com/xyhelper/chatgpt-share-server/deploy/quick-install.sh <span class="token operator">|</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-chatgpt-share-server-手动" tabindex="-1"><a class="header-anchor" href="#安装-chatgpt-share-server-手动" aria-hidden="true">#</a> 安装 ChatGPT-Share-Server(手动)</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">-b</span> deploy <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> https://github.com/xyhelper/chatgpt-share-server.git chatgpt-share
<span class="token builtin class-name">cd</span> chatgpt-share
./deploy.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="反代配置" tabindex="-1"><a class="header-anchor" href="#反代配置" aria-hidden="true">#</a> 反代配置</h2><h3 id="caddy" tabindex="-1"><a class="header-anchor" href="#caddy" aria-hidden="true">#</a> Caddy</h3><p>假定你的域名为<code>xxx.yourdomain.com</code>,请将<code>xxx.yourdomain.com</code>解析到服务器 IP,然后执行以下命令,注意将<code>xxx.yourdomain.com</code>替换为你的域名。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/caddy/Caddyfile <span class="token operator">&lt;&lt;</span><span class="token string">EOF
xxx.yourdomain.com {
    reverse_proxy 127.0.0.1:8300
}
EOF</span>

systemctl reload caddy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="管理" tabindex="-1"><a class="header-anchor" href="#管理" aria-hidden="true">#</a> 管理</h2><p>后台管理地址: <code>http://xxx.yourdomain.com/xyhelper</code></p><p>默认账号: <code>admin</code></p><p>默认密码: <code>123456</code></p><h2 id="常用管理命令" tabindex="-1"><a class="header-anchor" href="#常用管理命令" aria-hidden="true">#</a> 常用管理命令</h2><h3 id="重启" tabindex="-1"><a class="header-anchor" href="#重启" aria-hidden="true">#</a> 重启</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> chatgpt-share
<span class="token function">docker</span> compose restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="停止" tabindex="-1"><a class="header-anchor" href="#停止" aria-hidden="true">#</a> 停止</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> chatgpt-share
<span class="token function">docker</span> compose stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> chatgpt-share
<span class="token function">docker</span> compose start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="升级" tabindex="-1"><a class="header-anchor" href="#升级" aria-hidden="true">#</a> 升级</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> chatgpt-share
./deploy.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看日志" tabindex="-1"><a class="header-anchor" href="#查看日志" aria-hidden="true">#</a> 查看日志</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> chatgpt-share
<span class="token function">docker</span> compose logs <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,35);function _(y,q){const s=d("ExternalLinkIcon");return r(),l("div",null,[o,h,a("ul",null,[u,a("li",null,[e("安装 Docker 及 docker compose,推荐使用"),a("a",p,[e("官方安装脚本"),n(s)])]),v,a("li",null,[e("安装"),b,e("或"),m,e("等反向代理服务器,推荐使用"),g,e(",推荐使用"),a("a",k,[e("官方安装脚本"),n(s)])]),x]),f])}const S=i(t,[["render",_],["__file","index.html.vue"]]);export{S as default};
